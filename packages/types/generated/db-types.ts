/* tslint:disable */


/**
 * AUTO-GENERATED FILE @ 2021-03-14 16:52:38 - DO NOT EDIT!
 *
 * This file was automatically generated by schemats v.3.0.3
 * $ schemats generate -c postgres://username:password@localhost/databuilder -C -t jwt_secret -t inquiry -t user_auth -s app
 *
 */

export enum AppLocale {
    De = 'de',
    En = 'en',
    Ro = 'ro'
};
export enum Role {
    Admin = 'admin',
    Caregiver = 'caregiver',
    Client = 'client',
    Employee = 'employee'
};

export interface JwtSecretFields {
    keyid: string;
    secret: string;

}

export interface JwtSecret {
    keyid: JwtSecretFields["keyid"];
    secret: JwtSecretFields["secret"];

}

export interface InquiryFields {
    id: string;
    lastUpdatedAt: Date;
    postcode: number | null;
    startdate: string | null;
    whom: string | null;
    household: string | null;
    carelevel: string | null;
    mobility: string | null;
    nightcare: string | null;
    dementia: string | null;
    accomodation: string | null;
    contract: string | null;
    email: string | null;
    firstname: string | null;
    lastname: string | null;
    telephone: string | null;
    desiredContactWindow: string | null;

}

export interface Inquiry {
    id: InquiryFields["id"];
    lastUpdatedAt: InquiryFields["lastUpdatedAt"];
    postcode: InquiryFields["postcode"];
    startdate: InquiryFields["startdate"];
    whom: InquiryFields["whom"];
    household: InquiryFields["household"];
    carelevel: InquiryFields["carelevel"];
    mobility: InquiryFields["mobility"];
    nightcare: InquiryFields["nightcare"];
    dementia: InquiryFields["dementia"];
    accomodation: InquiryFields["accomodation"];
    contract: InquiryFields["contract"];
    email: InquiryFields["email"];
    firstname: InquiryFields["firstname"];
    lastname: InquiryFields["lastname"];
    telephone: InquiryFields["telephone"];
    desiredContactWindow: InquiryFields["desiredContactWindow"];

}

export interface UserAuthFields {
    id: string;
    role: Role;
    invitationHash: string | null;
    invitationMadeBy: string | null;
    invitationMadeAt: Date | null;
    invitationAcceptedAt: Date | null;
    lastUpdatedAt: Date;
    email: string;
    emailConfirmationSent: boolean;
    emailConfirmedAt: Date | null;
    emailConfirmationHash: string | null;
    salt: string;
    passwordHash: string;
    passwordLastUpdatedAt: Date | null;
    resetPasswordHash: string | null;
    resetPasswordExpiry: Date | null;
    invalidUserAttempts: number | null;
    lastInvalidAttempt: Date | null;

}

export interface UserAuth {
    id: UserAuthFields["id"];
    role: UserAuthFields["role"];
    invitationHash: UserAuthFields["invitationHash"];
    invitationMadeBy: UserAuthFields["invitationMadeBy"];
    invitationMadeAt: UserAuthFields["invitationMadeAt"];
    invitationAcceptedAt: UserAuthFields["invitationAcceptedAt"];
    lastUpdatedAt: UserAuthFields["lastUpdatedAt"];
    email: UserAuthFields["email"];
    emailConfirmationSent: UserAuthFields["emailConfirmationSent"];
    emailConfirmedAt: UserAuthFields["emailConfirmedAt"];
    emailConfirmationHash: UserAuthFields["emailConfirmationHash"];
    salt: UserAuthFields["salt"];
    passwordHash: UserAuthFields["passwordHash"];
    passwordLastUpdatedAt: UserAuthFields["passwordLastUpdatedAt"];
    resetPasswordHash: UserAuthFields["resetPasswordHash"];
    resetPasswordExpiry: UserAuthFields["resetPasswordExpiry"];
    invalidUserAttempts: UserAuthFields["invalidUserAttempts"];
    lastInvalidAttempt: UserAuthFields["lastInvalidAttempt"];

}
